id: "pypi.yt-dlp"
type: "PYTHON_PACKAGE"
summary: "功能强大的视频下载工具，支持数千个视频网站。"
description: |
  yt-dlp 是 youtube-dl 的一个功能增强分支，支持从 YouTube、Bilibili、抖音等数千个视频网站下载视频和音频。
  提供丰富的格式选择、字幕下载、播放列表处理等高级功能。
  
  主要功能：
  - 支持数千个视频网站的内容下载
  - 多种视频和音频格式选择
  - 自动字幕下载和转换
  - 播放列表和频道批量下载
  - 高度可定制的输出格式和文件命名
  - 支持代理和身份验证

examples:
  - title: "安装依赖"
    content: "pip install yt-dlp"
  
  - title: "基础视频下载示例"
    content: |
      import yt_dlp
      
      # 基础下载配置
      ydl_opts = {
          'format': 'best[height<=720]',  # 下载720p或更低质量
          'outtmpl': '%(title)s.%(ext)s',  # 输出文件名格式
      }
      
      # 下载单个视频
      with yt_dlp.YoutubeDL(ydl_opts) as ydl:
          try:
              ydl.download(['https://www.youtube.com/watch?v=dQw4w9WgXcQ'])
              print("下载完成！")
          except Exception as e:
              print(f"下载失败: {e}")
  
  - title: "高级下载配置示例"
    content: |
      import yt_dlp
      import os
      
      # 高级配置选项
      ydl_opts = {
          'format': 'bestvideo[height<=1080]+bestaudio/best[height<=1080]',
          'outtmpl': 'downloads/%(uploader)s/%(title)s.%(ext)s',
          'writesubtitles': True,  # 下载字幕
          'writeautomaticsub': True,  # 下载自动生成的字幕
          'subtitleslangs': ['zh-CN', 'en'],  # 字幕语言
          'ignoreerrors': True,  # 忽略错误继续下载
      }
      
      # 创建下载目录
      os.makedirs('downloads', exist_ok=True)
      
      # 下载播放列表
      urls = [
          'https://www.youtube.com/playlist?list=PLrAXtmRdnEQy6nuLvVUxpDnp2oCl7rQVE',
          'https://www.bilibili.com/video/BV1xx411c7mu'
      ]
      
      with yt_dlp.YoutubeDL(ydl_opts) as ydl:
          for url in urls:
              try:
                  # 获取视频信息
                  info = ydl.extract_info(url, download=False)
                  print(f"标题: {info.get('title', 'N/A')}")
                  print(f"时长: {info.get('duration', 'N/A')} 秒")
                  print(f"上传者: {info.get('uploader', 'N/A')}")
                  
                  # 开始下载
                  ydl.download([url])
                  print(f"✅ {url} 下载完成")
              except Exception as e:
                  print(f"❌ {url} 下载失败: {e}")

  - title: "仅提取音频示例"
    content: |
      import yt_dlp
      
      # 仅下载音频配置
      ydl_opts = {
          'format': 'bestaudio/best',
          'outtmpl': 'music/%(title)s.%(ext)s',
          'postprocessors': [{
              'key': 'FFmpegExtractAudio',
              'preferredcodec': 'mp3',
              'preferredquality': '192',
          }],
      }
      
      with yt_dlp.YoutubeDL(ydl_opts) as ydl:
          # 下载音乐
          music_urls = [
              'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
              'https://music.youtube.com/watch?v=dQw4w9WgXcQ'
          ]
          
          for url in music_urls:
              try:
                  ydl.download([url])
                  print(f"🎵 音频提取完成: {url}")
              except Exception as e:
                  print(f"❌ 音频提取失败: {e}")

requirement: "yt-dlp"
