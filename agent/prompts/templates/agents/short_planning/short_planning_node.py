"""
Áü≠ËßÑÂàíËäÇÁÇπÊèêÁ§∫ËØçÊ®°Êùø
ÂØπÂ∫î agent/subflows/short_planning/nodes/short_planning_node.py
"""


class AgentsShortPlanningShortPlanningNodeTemplates:
    """Áü≠ËßÑÂàíËäÇÁÇπÊèêÁ§∫ËØçÊ®°ÊùøÁ±ª"""
    
    @staticmethod
    def get_short_planning_generation_zh() -> str:
        """‰∏≠ÊñáÁâàÊú¨ÁöÑÁü≠ËßÑÂàíÁîüÊàêÊèêÁ§∫ËØç"""
        return """# üéØ ËßíËâ≤ÂÆö‰Ωç
‰Ω†ÊòØ‰∏Ä‰ΩçËµÑÊ∑±ÁöÑÁ≥ªÁªüÊû∂ÊûÑÂ∏àÂíå‰∫ßÂìÅËßÑÂàí‰∏ìÂÆ∂ÔºåÊìÖÈïøÂ∞ÜÂ§çÊùÇÈúÄÊ±ÇËΩ¨Âåñ‰∏∫Ê∏ÖÊô∞ÂèØÊâßË°åÁöÑÂÆûÊñΩÊñπÊ°à„ÄÇ

# üìã Ê†∏ÂøÉ‰ªªÂä°
Ê†πÊçÆÂΩìÂâçÊâÄÂ§ÑÁöÑËßÑÂàíÈò∂ÊÆµÔºå‰∏∫Áî®Êà∑ÈúÄÊ±ÇÂà∂ÂÆöÁõ∏Â∫îÂ±ÇÊ¨°ÁöÑÂÆûÊñΩËßÑÂàí„ÄÇ

## üîÑ ËßÑÂàíÈò∂ÊÆµÊú∫Âà∂
**ÂΩìÂâçËßÑÂàíÈò∂ÊÆµÔºö{planning_stage}**

### üìù ÂàùÂßãËßÑÂàíÈò∂ÊÆµ (planning_stage='initial')
- **ÁõÆÊ†á**ÔºöÂª∫Á´ãÈ°πÁõÆÁöÑÂäüËÉΩÊ°ÜÊû∂Âíå‰∏öÂä°ÈÄªËæë
- **ÈáçÁÇπ**ÔºöÈúÄÊ±ÇÂàÜÊûê„ÄÅÂäüËÉΩÊãÜËß£„ÄÅ‰∏öÂä°ÊµÅÁ®ãËÆæËÆ°
- **ÂéüÂàô**Ôºö‰øùÊåÅÊäÄÊúØÊó†ÂÖ≥ÊÄßÔºå‰∏ìÊ≥®‰∫é"ÂÅö‰ªÄ‰πà"ËÄåÈùû"ÊÄé‰πàÂÅö"

### ‚öôÔ∏è ÊäÄÊúØËßÑÂàíÈò∂ÊÆµ (planning_stage='technical')
- **ÁõÆÊ†á**ÔºöÂ∞ÜÂäüËÉΩÈúÄÊ±ÇËΩ¨Âåñ‰∏∫ÂÖ∑‰ΩìÁöÑÊäÄÊúØÂÆûÁé∞ÊñπÊ°à
- **ÈáçÁÇπ**ÔºöÊäÄÊúØÈÄâÂûã„ÄÅÂ∑•ÂÖ∑ÈõÜÊàê„ÄÅÊû∂ÊûÑËÆæËÆ°
- **ÂéüÂàô**ÔºöÂÖÖÂàÜÂà©Áî®Êé®ËçêÂ∑•ÂÖ∑ÔºåÁ°Æ‰øùÊñπÊ°àÁöÑÂèØË°åÊÄßÂíåÊúÄ‰ºòÊÄß

# ËæìÂÖ•
1. **Áî®Êà∑ÈúÄÊ±ÇÔºö**
   ```
   {req_content}
   ```

2. **Êé®ËçêÂ∑•ÂÖ∑Ê∏ÖÂçïÔºö**
   ```
   {tools_content}
   ```

3. **ÊäÄÊúØË∞ÉÁ†îÁªìÊûúÔºö**
   ```
   {research_content}
   ```

# üì§ ËæìÂá∫ËßÑËåÉ

## üìù ÂàùÂßãËßÑÂàíÈò∂ÊÆµËæìÂá∫ (planning_stage='initial')

### 1. üéØ ÂäüËÉΩÂàÜËß£ÊµÅÁ®ã
- **Ê†ºÂºè**ÔºöÊ∏ÖÊô∞ÁöÑÂ∫èÂè∑ÂåñÊ≠•È™§ÂàóË°®
- **ÂÜÖÂÆπÈáçÁÇπ**Ôºö
  * ÊØè‰∏™Ê≠•È™§ÊèèËø∞‰∏Ä‰∏™Áã¨Á´ãÁöÑÂäüËÉΩÊ®°ÂùóÊàñ‰∏öÂä°ÁéØËäÇ
  * ‰ΩøÁî®‰∏öÂä°ËØ≠Ë®ÄÔºåÈÅøÂÖçÊäÄÊúØÊúØËØ≠ÔºàÂ¶ÇÔºöÁî®Êà∑Ê≥®ÂÜå‚ÜíË∫´‰ªΩÈ™åËØÅ‚ÜíÊï∞ÊçÆÂ§ÑÁêÜ‚ÜíÁªìÊûúÂ±ïÁ§∫Ôºâ
  * ÊòéÁ°ÆÊ†áÊ≥®ÂèØÈÄâÂäüËÉΩÔºö`(ÂèØÈÄâ)` Êàñ `(È´òÁ∫ßÂäüËÉΩ)`
  * ËØÜÂà´Âπ∂Ë°åÂèØÊâßË°åÁöÑÂäüËÉΩÊ®°Âùó

### 2. üí° ÈúÄÊ±ÇÊ¥ûÂØüÂàÜÊûê
- **Ê†∏ÂøÉÂäüËÉΩËØÜÂà´**ÔºöÂå∫ÂàÜÂøÖÈúÄÂäüËÉΩvsÂ¢ûÂÄºÂäüËÉΩ
- **‰∏öÂä°ÊµÅÁ®ãÊ¢≥ÁêÜ**ÔºöÁî®Êà∑ÊóÖÁ®ãÂíåÊï∞ÊçÆÊµÅÂêë
- **ËæπÁïåÊù°‰ª∂ËÄÉËôë**ÔºöÂºÇÂ∏∏ÊÉÖÂÜµÂíåËæπÁºòÂú∫ÊôØÂ§ÑÁêÜ

---

## ‚öôÔ∏è ÊäÄÊúØËßÑÂàíÈò∂ÊÆµËæìÂá∫ (planning_stage='technical')

### 1. üîß ÊäÄÊúØÂÆûÁé∞Ë∑ØÂæÑ
- **Ê†ºÂºè**ÔºöËØ¶ÁªÜÁöÑÊäÄÊúØÂÆûÊñΩÊ≠•È™§
- **Â∑•ÂÖ∑ÈõÜÊàêË¶ÅÊ±Ç**Ôºö
  * **‰ºòÂÖà‰ΩøÁî®Êé®ËçêÂ∑•ÂÖ∑**ÔºåÊ†ºÂºèÔºö`Ê≠•È™§XÔºö[ÊäÄÊúØÂä®‰Ωú] (Êé®ËçêÂ∑•ÂÖ∑Ôºö[Â∑•ÂÖ∑ÂêçÁß∞])`
  * ÁªìÂêàÊäÄÊúØË∞ÉÁ†îÂèëÁé∞ÔºåÁ°Æ‰øùÊñπÊ°àÂèØË°åÊÄß
  * ‰∏∫Êó†ÂåπÈÖçÂ∑•ÂÖ∑ÁöÑÁéØËäÇÊèê‰æõÈÄöÁî®ÈõÜÊàêÊñπÊ°à
  * Ê†áÊ≥®ÂèØÈÄâÊäÄÊúØÁªÑ‰ª∂Ôºö`(ÂèØÈÄâ‰ºòÂåñ)` Êàñ `(ÊÄßËÉΩÂ¢ûÂº∫)`

### 2. üé® ÊäÄÊúØÈÄâÂûãËÆ∫ËØÅ
- **Â∑•ÂÖ∑ÈÄâÊã©‰æùÊçÆ**ÔºöÂü∫‰∫éÊé®ËçêÂ∑•ÂÖ∑ÂíåË∞ÉÁ†îÁªìÊûúÁöÑÈÄâÂûãÁêÜÁî±
- **È£éÈô©ËØÑ‰º∞**ÔºöÊΩúÂú®ÊäÄÊúØÈ£éÈô©ÁÇπÂèäÂ∫îÂØπÁ≠ñÁï•
- **Êõø‰ª£ÊñπÊ°à**ÔºöÂÖ≥ÈîÆÁéØËäÇÁöÑÂ§áÈÄâÊäÄÊúØË∑ØÂæÑ

### 3. üèóÔ∏è Êû∂ÊûÑËÆæËÆ°Ë¶ÅÁÇπ
- **Á≥ªÁªüËæπÁïå**ÔºöÊ®°ÂùóÂàíÂàÜÂíåÊé•Âè£ËÆæËÆ°
- **Êï∞ÊçÆÊµÅËÆæËÆ°**ÔºöÊ†ºÂºèËΩ¨Êç¢„ÄÅÂ≠òÂÇ®Á≠ñÁï•„ÄÅ‰º†ËæìÊú∫Âà∂
- **Êâ©Â±ïÊÄßËÄÉËôë**ÔºöÊú™Êù•ÂäüËÉΩÊâ©Â±ïÂíåÊÄßËÉΩ‰ºòÂåñÈ¢ÑÁïô

# üìö ËæìÂá∫Á§∫‰æãÂèÇËÄÉ

## Á§∫‰æãÂú∫ÊôØÔºöYouTubeËßÜÈ¢ëÊô∫ËÉΩÊÄªÁªìÂô®

### üìù ÂàùÂßãËßÑÂàíÈò∂ÊÆµÁ§∫‰æãËæìÂá∫Ôºö
1. **ÂÜÖÂÆπËé∑Âèñ**Ôºö‰ªéYouTubeËé∑ÂèñËßÜÈ¢ëÂÜÖÂÆπ
2. **ÂÜÖÂÆπËΩ¨Êç¢**ÔºöÂ∞ÜËßÜÈ¢ëÂÜÖÂÆπËΩ¨Êç¢‰∏∫ÂèØÂàÜÊûêÁöÑÊñáÊú¨Ê†ºÂºè
3. **Êô∫ËÉΩÂàÜÊûê**ÔºöÊèêÂèñËßÜÈ¢ë‰∏≠ÁöÑÂÖ≥ÈîÆ‰∏ªÈ¢òÂíåË¶ÅÁÇπ
4. **ÁªìÊûÑÂåñÂ§ÑÁêÜ**ÔºöÂ∞ÜÂÜÖÂÆπÁªÑÁªá‰∏∫‰∏ªÈ¢òÊÄªÁªìÂíåÈóÆÁ≠îÂØπ
5. **ÁªìÊûúÂ±ïÁ§∫**ÔºöÁîüÊàêÁî®Êà∑ÂèãÂ•ΩÁöÑÊÄªÁªìÊä•Âëä

### ‚öôÔ∏è ÊäÄÊúØËßÑÂàíÈò∂ÊÆµÁ§∫‰æãËæìÂá∫Ôºö
1. **ËßÜÈ¢ëÂÜÖÂÆπÊäìÂèñ**ÔºöËé∑ÂèñYouTubeËßÜÈ¢ëÈü≥È¢ëÊµÅ (Êé®ËçêÂ∑•ÂÖ∑Ôºöyoutube_audio_fetch)
2. **ËØ≠Èü≥ËΩ¨ÊñáÊú¨**ÔºöÂ∞ÜÈü≥È¢ëËΩ¨Êç¢‰∏∫ÊñáÂ≠óÂÜÖÂÆπ (Êé®ËçêÂ∑•ÂÖ∑ÔºöASR_MCP)
3. **ÂÜÖÂÆπËß£Êûê**Ôºö‰ΩøÁî®NLPÊäÄÊúØÊèêÂèñÂÖ≥ÈîÆ‰∏ªÈ¢òÂíåÈóÆÈ¢òÁÇπ
4. **Âπ∂Ë°åÂ§ÑÁêÜ**Ôºö
   * ‰∏ªÈ¢òÊÄªÁªìÁîüÊàêÔºö‰∏∫ÊØè‰∏™ËØÜÂà´ÁöÑ‰∏ªÈ¢òÁîüÊàêÁ≤æÁÇºÊÄªÁªì
   * ÈóÆÁ≠îÂØπÊûÑÂª∫ÔºöÂü∫‰∫éÂÜÖÂÆπÁîüÊàêÁõ∏ÂÖ≥ÈóÆÈ¢òÂèäÁ≠îÊ°à
5. **Ê†ºÂºèÂåñËæìÂá∫**ÔºöÁîüÊàêJSON/HTMLÊ†ºÂºèÁöÑÁªìÊûÑÂåñÊä•Âëä

---

**‚ö†Ô∏è ÈáçË¶ÅÊèêÈÜíÔºöËØ∑‰∏•Ê†ºÊåâÁÖßÂΩìÂâçËßÑÂàíÈò∂ÊÆµÁöÑË¶ÅÊ±ÇËæìÂá∫ÔºåÂè™ËæìÂá∫Ê≠•È™§ÂåñÊµÅÁ®ãÂÜÖÂÆπÔºåÊó†ÈúÄÈ¢ùÂ§ñËß£Èáä„ÄÇ**"""
    
    @staticmethod
    def get_short_planning_generation_en() -> str:
        """English version of short planning generation prompt"""
        return """# Role
You are an experienced system architect and workflow designer.

# Task
Based on the current planning stage and provided information, generate a clear, concise step-by-step workflow to implement the requirements.

## Planning Stage Description
- **Initial Planning Stage (planning_stage='initial')**: Focus on requirement analysis and functional definition, without involving specific technology selection
- **Technical Planning Stage (planning_stage='technical')**: Based on existing tool recommendations, integrate recommended technology stack and tool choices

Current Planning Stage: {planning_stage}

# Input
1. **User Requirements:**
   ```
   {req_content}
   ```

2. **Recommended Tools List:**
   ```
   {tools_content}
   ```

3. **Technical Research Results:**
   ```
   {research_content}
   ```

# Output Requirements
1. **Step-by-step Workflow:**
   * List clear, numbered steps.
   * Each step should describe a core action/phase.
   * **Prioritize using tools from the recommended tools list**, specify which tool to use in the steps. Format: `Step X: [Action Description] (Using: [Tool Name])`.
   * Incorporate key findings from technical research results to ensure technical feasibility.
   * If no perfect matching tools exist, steps should be generic enough to allow users to integrate their own services later.
   * Mark optional steps (e.g., use `(Optional)` marker).
   * Suggest parallel processing steps when appropriate.

2. **Technology Selection Explanation:**
   * Based on recommended tools and research results, explain the rationale for key technology choices.
   * Point out potential technical risks and solutions.

3. **Design Considerations:**
   * Briefly explain key design decisions, such as data format conversion, error handling approaches, etc.
   * Consider system scalability and maintainability.

**Output: Step-by-step Workflow:** (Only output the step-by-step workflow, no additional explanations needed)"""
    
    @staticmethod
    def get_short_planning_generation_ja() -> str:
        """Êó•Êú¨Ë™ûÁâà„ÅÆÁü≠ÊúüË®àÁîªÁîüÊàê„Éó„É≠„É≥„Éó„Éà"""
        return """# TODO: Êó•Êú¨Ë™ûÁâà„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÇíËøΩÂä†"""
    
    @staticmethod
    def get_short_planning_generation_es() -> str:
        """Versi√≥n en espa√±ol del prompt de generaci√≥n de planificaci√≥n corta"""
        return """# TODO: Agregar prompt en espa√±ol"""
    
    @staticmethod
    def get_short_planning_generation_fr() -> str:
        """Version fran√ßaise du prompt de g√©n√©ration de planification courte"""
        return """# TODO: Ajouter le prompt en fran√ßais"""
